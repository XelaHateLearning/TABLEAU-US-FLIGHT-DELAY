<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <Layers />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='FlightDelay_17416840275610' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet2 (port1)' inline='true' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='port1' name='excel-direct.1tyyrcb0qjvvuz1c4yuto03ahmym'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/xeela/bukan apa-apa, jangan di buka/port1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1tyyrcb0qjvvuz1c4yuto03ahmym' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='City' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='Column1' ordinal='8' />
            <column datatype='string' name='airport_name' ordinal='9' />
            <column datatype='integer' name='arr_delay' ordinal='10' />
            <column datatype='integer' name='carrier_delay' ordinal='11' />
            <column datatype='integer' name='weather_delay' ordinal='12' />
            <column datatype='integer' name='nas_delay' ordinal='13' />
            <column datatype='integer' name='security_delay' ordinal='14' />
            <column datatype='integer' name='late_aircraft_delay' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Column1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Column1]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Column1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_1416663613604651008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
          <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Airline_delay' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;TT&quot;' value='&quot;Massachusetts&quot;' />
        </semantic-values>
      </column>
      <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1416663613604651008]' derivation='Avg' name='[avg:Calculation_1416663613604651008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1416663613604651008]' derivation='Sum' name='[sum:Calculation_1416663613604651008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (City,State)' hidden='true' name='[Action (City,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, City'>
          <field>[state]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ALEXGT~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1e3hm1e0qzrjwx1dt5lui1tisl8l.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/11/2025 07:48:55 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet2</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1166</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1119</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Column1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Column1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Column1</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25034</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11474</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3935</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5838</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>735</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>15</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9928</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet2_77127DF1A9E44A8C9355AE68E517B71B]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[avg:Calculation_1416663613604651008:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:Calculation_1416663613604651008:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inyokern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Topeka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klamath Falls&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wendover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='Column1' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_1416663613604651008' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Airline_delay' id='Sheet2_77127DF1A9E44A8C9355AE68E517B71B'>
            <properties context=''>
              <relation connection='excel-direct.1tyyrcb0qjvvuz1c4yuto03ahmym' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='City' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='Column1' ordinal='8' />
                  <column datatype='string' name='airport_name' ordinal='9' />
                  <column datatype='integer' name='arr_delay' ordinal='10' />
                  <column datatype='integer' name='carrier_delay' ordinal='11' />
                  <column datatype='integer' name='weather_delay' ordinal='12' />
                  <column datatype='integer' name='nas_delay' ordinal='13' />
                  <column datatype='integer' name='security_delay' ordinal='14' />
                  <column datatype='integer' name='late_aircraft_delay' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
      <datasources>
        <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
      </datasources>
      <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]' included-values='in-range'>
        <min>#2013-10-25 00:00:00#</min>
        <max>#2023-08-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_E64C3DF93F794B4292BAADD5010B1706]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US FLIGHT DELAY' type='sheet' worksheet='MAP' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US FLIGHT DELAY' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_5CDDEF14AFD34DEE98ABBD59F9655122]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US FLIGHT DELAY' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US FLIGHT DELAY' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_6CEEF6C889514EEDA14855B828A40E66]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US FLIGHT DELAY' type='sheet' worksheet='Carrier Delay Percentage' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US FLIGHT DELAY' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_E9D769BCC57C43BA887E1DCAED62172A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US FLIGHT DELAY' type='sheet' worksheet='Total Delay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US FLIGHT DELAY' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
          </datasources>
          <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;TT&quot;' value='&quot;Massachusetts&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E64C3DF93F794B4292BAADD5010B1706]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action4_6CEEF6C889514EEDA14855B828A40E66]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier:nk]' />
              <tooltip column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[attr:carrier_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5162431001663208' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]</rows>
        <cols>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{DE0DB360-E7D3-4473-8844-D0A563609A74}' />
    </worksheet>
    <worksheet name='Carrier Delay Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
          </datasources>
          <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
            <column caption='Carrier Delay Percentage' datatype='real' name='[Calculation_1416663613604651008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1416663613604651008]' derivation='Avg' name='[avg:Calculation_1416663613604651008:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;TT&quot;' value='&quot;Massachusetts&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_5CDDEF14AFD34DEE98ABBD59F9655122]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E64C3DF93F794B4292BAADD5010B1706]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[yr:Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='member' level='[yr:Date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[yr:Date:ok]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[avg:Calculation_1416663613604651008:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[avg:Calculation_1416663613604651008:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[avg:Calculation_1416663613604651008:qk]</rows>
        <cols>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{3114E4F3-8125-44A1-911B-C515D7F0D91F}' />
    </worksheet>
    <worksheet name='MAP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;TT&quot;' value='&quot;Massachusetts&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_5CDDEF14AFD34DEE98ABBD59F9655122]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action4_6CEEF6C889514EEDA14855B828A40E66]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Latitude (generated)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Longitude (generated)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Longitude (generated)]' field-type='quantitative' max='34772261.269303605' min='21571205.88532865' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Latitude (generated)]' field-type='quantitative' max='10622049.571169063' min='36060.712827484822' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes customization-axis='layer'>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:state:nk]' />
            </encodings>
          </pane>
          <pane generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' />
              <lod column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:state:nk]' />
              <geometry column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' />
              <size column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' />
              <lod column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' />
              <tooltip column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[attr:airport_name:nk]' />
              <lod column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3314917087554932' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Latitude (generated)]</rows>
        <cols>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{36A99EAA-6377-414C-BFB3-ECEF87E67054}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
          </datasources>
          <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Arr Delay' datatype='integer' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Carrier Delay' datatype='integer' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Late Aircraft Delay' datatype='integer' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='integer' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[security_delay]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;TT&quot;' value='&quot;Massachusetts&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action2_5CDDEF14AFD34DEE98ABBD59F9655122]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_E64C3DF93F794B4292BAADD5010B1706]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action4_6CEEF6C889514EEDA14855B828A40E66]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (City,State)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (Carrier)]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Action (MONTH(Date))]</column>
            <column>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='color' data-class='subtotal' value='#555555' />
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
            <format attr='height' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]' value='bold' />
            <format attr='text-align' field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]' value='center' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-size' scope='rows' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e9f3f2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8FDA8C80-F69A-4241-B3CB-8313AF6C56FF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='US FLIGHT DELAY'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet2 (port1)' name='federated.1ox06dd0zca9vu0zq093d1dksxn4' />
      </datasources>
      <datasource-dependencies datasource='federated.1ox06dd0zca9vu0zq093d1dksxn4'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='87835' id='24' param='vert' type-v2='layout-flow' w='98524' x='738' y='1351'>
            <zone fixed-size='24' h='5405' id='25' is-fixed='true' type-v2='title' w='98524' x='738' y='1351'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='82430' id='22' type-v2='layout-basic' w='98524' x='738' y='6756'>
              <zone h='76716' id='19' param='horz' type-v2='layout-flow' w='98524' x='738' y='12470'>
                <zone h='76716' id='17' type-v2='layout-basic' w='98524' x='738' y='12470'>
                  <zone h='76716' id='7' param='horz' type-v2='layout-flow' w='98524' x='738' y='12470'>
                    <zone h='76716' id='5' type-v2='layout-basic' w='98524' x='738' y='12470'>
                      <zone h='76716' id='3' name='MAP' show-title='false' w='49262' x='738' y='12470'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38353' id='11' name='Carrier' show-title='false' w='49262' x='50000' y='12470'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='38363' id='13' name='Carrier Delay Percentage' show-title='false' w='49262' x='50000' y='50823'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='5714' id='21' type-v2='layout-flow' w='98524' x='738' y='6756'>
                <zone h='5714' id='20' name='Carrier Delay Percentage' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='98524' x='738' y='6756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='9463' id='14' name='Total Delay' show-title='false' w='98524' x='738' y='89186'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='32' param='vert' type-v2='layout-flow' w='98524' x='738' y='1351'>
                <zone fixed-size='24' h='5405' id='25' type-v2='title' w='98524' x='738' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76716' id='3' is-fixed='true' name='MAP' show-title='false' w='49262' x='738' y='12470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38353' id='11' is-fixed='true' name='Carrier' show-title='false' w='49262' x='50000' y='12470'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5714' id='20' name='Carrier Delay Percentage' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[tmn:Date:qk]' show-title='false' type-v2='filter' values='database' w='98524' x='738' y='6756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38363' id='13' is-fixed='true' name='Carrier Delay Percentage' show-title='false' w='49262' x='50000' y='50823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='9463' id='14' is-fixed='true' name='Total Delay' show-title='false' w='98524' x='738' y='89186'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6489137B-731C-4B68-B789-0CBF17735FAC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:City:nk]</field>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:airport_name:nk]</field>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9E6904AF-54CD-4A2C-BE71-FDAD33D03502}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier:nk]</field>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA7ED5F3-A0EF-4F1C-B126-66AAAAB0535B}' />
    </window>
    <window class='worksheet' name='Carrier Delay Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{805D4372-3AB3-42A3-8F1D-4A4440E101FD}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ox06dd0zca9vu0zq093d1dksxn4].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{578BCEE5-3B27-4200-9505-EC906E628F3C}' />
    </window>
    <window class='dashboard' maximized='true' name='US FLIGHT DELAY'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Carrier Delay Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ox06dd0zca9vu0zq093d1dksxn4].[sum:arr_delay:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{83BEF99B-32E8-4156-9830-7AC1F98FADC5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay Percentage' width='192'>
      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
      TSBewQsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='51' name='Total Delay' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='US FLIGHT DELAY' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
